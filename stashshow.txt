diff --git a/all_in_one.c b/all_in_one.c
deleted file mode 100644
index 63298eb..0000000
--- a/all_in_one.c
+++ /dev/null
@@ -1,2237 +0,0 @@
-// File: src/builtins/cd.c
-#include "../../includes/minishell.h"
-
-
-static void	replace_or_add_env(char *arg, t_global *data)
-{
-	char	*key;
-
-	key = NULL;
-	if (ft_strchr_i(arg, '=') != -1)
-	{
-		key = ft_strndup(arg, ft_strchr_i(arg, '='));
-		ft_strarr_str_replace(data->env, key, arg);
-	}
-	else if (ft_strchr_i(arg, '=') == -1)
-		key = ft_strdup(arg);
-	if (ft_strarr_str(data->env, key) == -1
-		&& ft_strarr_str(data->env, key) == -1)
-		ft_strarr_stradd(&data->env, arg);
-	if (key != NULL)
-		free(key);
-}
-
-static int	update_pwds(t_global *data, int option)
-{
-	char	cwd[4096];
-	char	*pwd;
-
-	if (getcwd(cwd, 4096) == NULL)
-		return (1);
-	if (option == 1)
-		pwd = ft_strjoin("OLDPWD=", cwd);
-	else
-		pwd = ft_strjoin("PWD=", cwd);
-	if (!pwd)
-		return (1);
-	replace_or_add_env(pwd, data);
-	ft_memdel(pwd);
-	return (0);
-}
-
-static int	go_oldpwd(t_global *data)
-{
-	int		result;
-	char	*path;
-	char	*old_path;
-	char	*cwd;
-
-	cwd = getcwd(NULL, 0);
-	old_path = ft_strjoin("OLDPWD=", cwd);
-	path = NULL;
-	path = ft_getenv("OLDPWD", &data);
-	if (!path)
-	{
-		ft_dprintf(STDERR_FILENO, "minishell : cd: OLDPWD not set\n");
-		return (0);
-	}
-	result = chdir(path);
-	replace_or_add_env(old_path, data);
-	ft_memdel(old_path);
-	ft_memdel(cwd);
-	return (result);
-}
-
-static int	go_home(t_global *data)
-{
-	int		result;
-	char	*path;
-
-	path = NULL;
-	update_pwds(data, 1);
-	path = ft_getenv("HOME", &data);
-	if (!path)
-		ft_dprintf(STDERR_FILENO, "minishell: cd: HOME not set\n");
-	if (!path)
-		return (0);
-	result = chdir(path);
-	return (result);
-}
-
-int	ft_cd(char **args, int args_len, t_global *data)
-{
-	int		result;
-
-	if (args_len > 2)
-	{
-		result = 1;
-		ft_dprintf(2, "minishell : cd: too many arguments");
-	}	
-	else if (args_len == 1)
-		result = go_home(data);
-	else if (ft_strcmp(args[1], "-") == 0)
-		result = go_oldpwd(data);
-	else
-	{
-		update_pwds(data, 1);
-		result = chdir(args[1]);
-		if (result < 0)
-			result *= -1;
-		if (result != 0)
-			ft_dprintf(2, "minishell: cd: %s: %s\n", args[1], strerror(errno));
-	}
-	update_pwds(data, 0);
-	return (result);
-}
-
-// File: src/builtins/echo.c
-int	ft_echo(char **args, int args_len)
-{
-	int		i;
-	int		n_option;
-
-	i = 1;
-	n_option = 0;
-	if (args_len > 1)
-	{
-		while (args[i] && ft_strcmp(args[i], "-n") == 0)
-		{
-			n_option = 1;
-			i++;
-		}
-		while (args[i])
-		{
-			ft_dprintf(STDOUT_FILENO, args[i]);
-			if (args[i + 1] && args[i][0] != '\0')
-				ft_dprintf(STDOUT_FILENO, " ");
-			i++;
-		}
-	}
-	if (n_option == 0)
-		ft_dprintf(STDOUT_FILENO, "\n");
-	return (0);
-}
-
-t_bool	is_builtin(char *command)
-{
-	if (ft_strcmp(command, "echo") == 0)
-		return (1);
-	if (ft_strcmp(command, "cd") == 0)
-		return (1);
-	if (ft_strcmp(command, "pwd") == 0)
-		return (1);
-	if (ft_strcmp(command, "env") == 0)
-		return (1);
-	if (ft_strcmp(command, "export") == 0)
-		return (1);
-	if (ft_strcmp(command, "unset") == 0)
-		return (1);
-	if (ft_strcmp(command, "exit") == 0)
-		return (1);
-	return (0);
-}
-
-int	exec_builtin(char **args, int args_len, t_global *data)
-{
-	int		result;
-
-	result = 0;
-	if (handle_redirects(data, data->original_fds) == 0)
-	{
-		restore_original_fds(data->original_fds);
-		return (1);
-	}
-	if (ft_strcmp(args[0], "echo") == 0)
-		result = ft_echo(args, args_len);
-	if (ft_strcmp(args[0], "cd") == 0)
-		result = ft_cd(args, args_len, data);
-	if (ft_strcmp(args[0], "pwd") == 0)
-		result = ft_pwd();
-	if (ft_strcmp(args[0], "env") == 0)
-		result = ft_env(args, args_len, &data);
-	if (ft_strcmp(args[0], "export") == 0)
-		result = ft_export(args, args_len, data);
-	if (ft_strcmp(args[0], "unset") == 0)
-		result = ft_unset(args, args_len, data);
-	if (ft_strcmp(args[0], "exit") == 0)
-		result = ft_exit(args, args_len, data);
-	restore_original_fds(data->original_fds);
-	return (result);
-}
-
-// File: src/builtins/exit.c
-
-int	ft_exit(char **args, int args_len, t_global *data)
-{
-	if (args_len == 1)
-	{
-		if (pipecount(data) == 0)
-			ft_printf("exit\n");
-		data->ret = 0;
-		data->exit = TRUE;
-	}
-	else if (args_len > 1 && !argument_is_valid(args[1]))
-	{
-		data->ret = 2;
-		ft_dprintf(2, "exit: %s: numeric argument required\n", args[1]);
-		data->exit = TRUE;
-	}
-	else if (args_len > 2 && argument_is_valid(args[1]))
-	{
-		ft_dprintf(STDERR_FILENO, "minishell: exit: too many arguments\n");
-		data->ret = 1;
-	}
-	else if (args_len == 2 && argument_is_valid(args[1]))
-	{
-		ft_printf("exit\n");
-		data->ret = ft_atoi(args[1]);
-		data->exit = TRUE;
-	}
-	return (data->ret);
-}
-
-
-// File: src/execution/exec.c
-#include "../../includes/minishell.h"
-
-int	handle_execution(t_global *data)
-{
-	char	**args;
-
-	args = NULL;
-	if (data->hashtable[0] && data->hashtable[0]->content)
-		args = hash_to_args(data->hashtable[0]);
-	if (pipecount(data) == 0)
-		data->ret = exec_one_process(data);
-	else if (pipecount(data) > 0)
-		data->ret = exec_processes(data);
-	if (data->hashtable[0]->content)
-		ft_strarr_free(args, ft_strarr_len(args));
-	return (data->ret);
-}
-
-// File: src/execution/exec_one_process.c
-#include "../../includes/minishell.h"
-
-void	write_in_heredoc(t_global *data, int heredoc_number, char *eof);
-
-int	exec_nonbuiltin(char **args, t_global *data)
-{
-	char	*cmd;
-
-	if (!args[0][0] || !ft_strcmp(*args, " "))
-		external_exit(EXIT_SUCCESS);
-	cmd = get_cmd(args[0], data);
-	if (cmd == NULL)
-	{
-		ft_dprintf(STDERR_FILENO, "minishell: %s: command not found\n", args[0]);
-		ft_strarr_free(args, ft_strarr_len(args));
-		external_exit(CMD_NOT_FOUND);
-	}
-	if (is_folder(args[0]))
-		external_exit(NOT_EXECUTABLE);
-	if (cmd)
-	{
-		if (execve(cmd, args, data->env) == -1)
-		{
-			ft_dprintf(STDERR_FILENO, "minishell: %s: %s\n",
-				args[0], strerror(errno));
-			exit(EXIT_FAILURE);
-		}
-	}
-	return (data->ret);
-}
-
-int	exec_nonbuiltin_and_wait(t_global *data, char **args, int pid)
-{
-	int	status;
-	int	ret;
-
-	ret = 1;
-	status = 0;
-	if (pid == -1)
-		perror("minishell: fork");
-	else if (pid == 0)
-	{
-		status = exec_nonbuiltin(args, data);
-		//exit(EXIT_FAILURE);
-	}
-	else
-	{
-		waitpid(pid, &status, 0);
-	}
-	if (WIFSIGNALED(status))
-		ret = handle_signal_interrupt(status, TRUE);
-	else if (WIFEXITED(status))
-		ret = WEXITSTATUS(status);
-	if (ret == 1 && status != 0)
-		ret = status;
-	return (ret);
-}
-
-int	exec_nonbuiltin_onfork(t_global *data, char **args)
-{
-	int		pid;
-	int		ret;
-	int		i;
-
-	i = 0;
-	ret = 1;
-	while (data->hashtable[0]->redir[i])
-	{
-		if (ft_strncmp(data->hashtable[0]->redir[i], "<<", 2) == 0)
-			write_in_heredoc(data, i, &data->hashtable[0]->redir[i][2]);
-		i++;
-	}
-	if (handle_redirects(data, data->original_fds) == 0)
-	{
-		restore_original_fds(data->original_fds);
-		return(ret);
-	}
-	if (args && args[0] && !is_builtin(args[0]))
-	{
-		pid = fork();
-		define_exec_signals(pid);
-		ret = exec_nonbuiltin_and_wait(data, args, pid);
-		restore_original_fds(data->original_fds);
-	}
-	return (ret);
-}
-
-int	exec_one_process(t_global *data)
-{
-	int		ret;
-	char	**args;
-
-	ret = 1;
-	args = NULL;
-	if (data->hashtable[0]->content)
-		args = hash_to_args(data->hashtable[0]);
-	if (args && args[0] && is_builtin(args[0]))
-		ret = exec_builtin(args, hashsize(data->hashtable[0]), data);
-	else
-		ret = exec_nonbuiltin_onfork(data, args);
-	if (data->hashtable[0]->content)
-		ft_strarr_free(args, ft_strarr_len(args));
-	restore_original_fds(data->original_fds);
-	return (ret);
-}
-
-// File: src/execution/exec_processes.c
-#include "../../includes/minishell.h"
-
-void	restore_fds(int original_fds[2]);
-int		wait_for_children(int children_pid[1024]);
-
-static void	save_original_fds(int original_fds[2])
-{
-	original_fds[0] = dup(STDIN_FILENO);
-	original_fds[1] = dup(STDOUT_FILENO);
-}
-
-static int	*init_children_pid(t_global *data)
-{
-	int		*children_pid;
-	size_t	size;
-
-	size = sizeof(int) * (pipecount(data) + 2);
-	children_pid = malloc(size);
-	if (!children_pid)
-		return (NULL);
-	ft_bzero(children_pid, size);
-	return (children_pid);
-}
-
-int	execute_forked_builtin(char **args, int idx, t_global *data)
-{
-	int	exit_status;
-
-	exit_status = exec_builtin(args, hashsize(data->hashtable[idx]), data);
-	ft_strarr_free(args, ft_strarr_len(args));
-	rl_clear_history();
-	data->ret = exit_status;
-	exit(exit_status);
-}
-
-static void	execute_forked_command(t_global *data, int idx)
-{
-	char	**args;
-
-	close_extra_fds();
-	args = hash_to_args(data->hashtable[idx]);
-	if (is_builtin(args[0]))
-		execute_forked_builtin(args, idx, data);
-	else
-	{
-		exec_nonbuiltin(args, data);
-	}
-}
-
-int	exec_processes(t_global *data)
-{
-	int	*children_pid;
-	int	i;
-
-	save_original_fds(data->original_fds);
-	children_pid = init_children_pid(data);
-	i = 0;
-	while (data->hashtable[i])
-	{
-		handle_pipe(data->original_fds[OUT], data,
-			data->hashtable[i], data->hashtable);
-		children_pid[i] = fork();
-		define_exec_signals(children_pid[i]);
-		if (children_pid[i] == -1)
-			ft_dprintf(2, "minishell: %s: %s\n", "fork", strerror(errno));
-		else if (children_pid[i] == 0)
-		{
-			handle_redirects_for_pipes(&data->hashtable[i]->redir);
-			execute_forked_command(data, i);
-		}
-		i++;
-	}
-	restore_fds(data->original_fds);
-	return (wait_for_children(children_pid));
-}
-
-// File: src/execution/exec_processes_utils.c
-#include "../../includes/minishell.h"
-
-static int	is_control_c(int status)
-{
-	return (WTERMSIG(status) == SIGINT);
-}
-
-static int	is_control_slash(int status)
-{
-	return (WTERMSIG(status) == SIGQUIT);
-}
-
-int	handle_signal_interrupt(int status, int is_last_child)
-{
-	if (is_control_c(status))
-		ft_putstr_fd("\n", STDOUT_FILENO);
-	if (is_control_slash(status) && is_last_child)
-		ft_putstr_fd("Quit\n", STDOUT_FILENO);
-	return (INTERRUPT + WTERMSIG(status));
-}
-
-int	wait_for_child(int child_pid, int is_last_child)
-{
-	int	status;
-
-	if (child_pid == FORK_ERROR)
-		return (EXIT_FAILURE);
-	if (waitpid(child_pid, &status, 0) == -1)
-		ft_dprintf(2, "minishell: waitpid: %s\n", strerror(errno));
-	if (WIFSIGNALED(status))
-		return (handle_signal_interrupt(status, is_last_child));
-	if (WIFEXITED(status))
-		return (WEXITSTATUS(status));
-	return (EXIT_FAILURE);
-}
-
-int	wait_for_children(int children_pid[1024])
-{
-	int	i;
-	int	exit_status;
-	int	is_last_child;
-
-	i = 0;
-	exit_status = 0;
-	while (children_pid[i] != 0)
-	{
-		is_last_child = children_pid[i + 1] == 0;
-		exit_status = wait_for_child(children_pid[i], is_last_child);
-		i++;
-	}
-	close_extra_fds();
-	//free(children_pid);
-	return (exit_status);
-}
-
-// File: src/execution/exec_utils.c
-#include "../../includes/minishell.h"
-
-int	hashsize(t_tkn *hashtable)
-{
-	int		i;
-	t_tkn	*temp;
-
-	if (!hashtable)
-		return (-1);
-	temp = hashtable;
-	i = 0;
-	while (temp)
-	{
-		temp = temp->next;
-		i++;
-	}
-	return (i);
-}
-
-t_bool	check_empty_str(t_tkn **node)
-{
-	if ((*node)->prev && ((*node)->prev->content
-			&& !ft_strcmp((*node)->prev->content, "")
-			&& (*node)->prev->space_after == TRUE)
-		&& (*node)->prev->prev && (*node)->prev->prev->space_after == TRUE)
-		return (TRUE);
-	return (FALSE);
-}
-
-void	fill_args(t_tkn	**node, char **args, int i)
-{
-	char	*arg_tmp;
-
-	arg_tmp = NULL;
-	if (check_empty_str(node))
-		args[i] = ft_strjoin(" ", (*node)->content);
-	else if (!(*node)->prev
-		|| ((*node)->prev && ((*node)->prev->space_after == TRUE)
-			&& (*node)->content))
-		args[i] = ft_strdup((*node)->content);
-	while (((*node)->space_after == FALSE) && (*node)->next)
-	{
-		if (!ft_strcmp((*node)->next->content, "") && (*node)->next->next
-			&& (*node)->next->space_after == FALSE)
-		{
-			arg_tmp = ft_strjoin(args[i], (*node)->next->next->content);
-			*node = (*node)->next;
-		}
-		else
-			arg_tmp = ft_strjoin(args[i], (*node)->next->content);
-		free(args[i]);
-		args[i] = arg_tmp;
-		(*node) = (*node)->next;
-	}
-}
-
-char	**hash_to_args(t_tkn *node)
-{
-	char	**args;
-	t_tkn	*temp;
-	int		i;
-	int		args_count;
-
-	if (!node->content && !node->next)
-		return (NULL);
-	args_count = hashsize(node);
-	args = ft_calloc((args_count + 1), sizeof(char *));
-	temp = node;
-	i = 0;
-	while (temp)
-	{
-		fill_args(&temp, args, i);
-		temp = temp->next;
-		i++;
-	}
-	args[args_count] = NULL;
-	return (args);
-}
-
-void	restore_fds(int original_fds[2])
-{
-	redirect_fd(original_fds[IN], STDIN_FILENO);
-	redirect_fd(original_fds[OUT], STDOUT_FILENO);
-}
-
-// File: src/execution/pipes.c
-#include "../../includes/minishell.h"
-
-int	pipecount(t_global *data)
-{
-	int	result;
-
-	result = 0;
-	while (data->hashtable[result])
-	{
-		result++;
-	}
-	return (result - 1);
-}
-
-static void	quit_child(char *(*args)[TABLE_SIZE])
-{
-	rl_clear_history();
-	free_redir_args(args);
-	close_all_fds();
-	exit(EXIT_FAILURE);
-}
-
-void	handle_redirects_for_pipes(char *(*redirects)[TABLE_SIZE])
-{
-	int	i;
-
-	i = 0;
-	while ((*redirects)[i])
-	{
-		if ((*redirects)[i][0] == '<')
-		{
-			if (redirect_input((*redirects)[i], i) == 0)
-				quit_child(redirects);
-		}
-		if ((*redirects)[i][0] == '>')
-		{
-			if (redirect_output((*redirects)[i]) == 0)
-				quit_child(redirects);
-		}
-		i++;
-	}
-}
-
-void	handle_pipe(int original_fd_out, t_global *data,
-	t_tkn *current_node, t_tkn **hashtable)
-{
-	t_bool		is_first_node;
-	t_bool		has_next_node;
-	t_tkn		*last_node;
-	static int	pipe_fds[2];
-
-	last_node = hashtable[pipecount(data)];
-	is_first_node = (current_node == hashtable[0]);
-	has_next_node = (current_node != last_node);
-	if (!is_first_node)
-		redirect_fd(pipe_fds[IN], STDIN_FILENO);
-	if (has_next_node)
-	{
-		if (pipe(pipe_fds) == -1)
-			ft_dprintf(2, "minishell: pipe: %s\n", strerror(errno));
-		redirect_fd(pipe_fds[OUT], STDOUT_FILENO);
-	}
-	else
-		redirect_fd(original_fd_out, STDOUT_FILENO);
-}
-
-// File: src/expand/expander.c
-#include "../../includes/minishell.h"
-
-void	handle_expand_fail(t_tkn **node);
-char	*search_value(t_global **data, char **str, int i, int len);
-
-/**
- * It updates the token node with the variable value (*exp_value).
- */
-static char	*prepare_new_content(t_tkn *node, int len,
-	int var_len, char *exp_value)
-{
-	char	*new_content;
-	int		token_len;
-	int		value_len;
-	int		i;
-
-	value_len = ft_strlen(exp_value);
-	token_len = ft_strlen(node->content) - var_len;
-	new_content = ft_calloc((token_len + value_len + 1), sizeof(char));
-	if (!new_content)
-		return (NULL);
-	i = 0;
-	while (node->content[i] != '$')
-	{
-		new_content[i] = node->content[i];
-		i++;
-	}
-	ft_strlcpy(new_content + i, exp_value, value_len + 1);
-	while (node->content[len])
-	{
-		new_content[i + value_len] = node->content[len];
-		i++;
-		len++;
-	}
-	return (new_content);
-}
-
-static void	update_node(t_tkn **node, int len, int var_len, char **exp_value)
-{
-	char	*new_content;
-
-	new_content = prepare_new_content(*node, len, var_len, *exp_value);
-	if (new_content == NULL)
-		return ;
-	free((*node)->content);
-	free(*exp_value);
-	(*node)->content = ft_strdup(new_content);
-	free(new_content);
-}
-
-
-static int	get_var_value(t_tkn **node, int i, t_global **data)
-{
-	int		len;
-	char	*value;
-
-	len = 0;
-	value = NULL;
-	while (is_var_name(node, i, len))
-		len++;
-	if (is_special_variable((*node)->content, TRUE))
-		return (0);
-	if (((*node)->content[i] == '?' && !(*node)->content[i + 1])
-		|| !ft_strncmp((*node)->content + i, "? ", 2))
-		value = ft_itoa((*data)->ret);
-	else
-		value = search_value(data, &(*node)->content, i, len);
-	if (!value)
-	{
-		handle_expand_fail(node);
-		if ((*node)->prev && (ft_strcmp((*node)->prev->content, ">") == 0
-				|| ft_strcmp((*node)->prev->content, "<") == 0))
-			return (0);
-	}
-	else
-		update_node(node, i + len, len, &value);
-	return (1);
-}
-
-int	check_if_expandable(t_tkn **node, t_global **data)
-{
-	int		i;
-	int		result;
-
-	result = 1;
-	if (!ft_strcmp((*node)->type, VARIABLE)
-		|| !ft_strcmp((*node)->type, STRING_STD)
-		|| !ft_strcmp((*node)->type, EXPT_VARIABLE))
-	{
-		i = 0;
-		while ((*node)->content[i] != '\0')
-		{
-			if ((*node)->content[i] == '$')
-			{
-				i++;
-				result = get_var_value(node, i, data);
-			}
-			i++;
-		}
-	}
-	return (result);
-}
-
-int	expand(t_tkn *(*hashtable)[TABLE_SIZE], t_global **data)
-{
-	int		i;
-	int		result;
-	t_tkn	*temp;
-
-	i = 0;
-	result = 1;
-	while ((*hashtable)[i])
-	{
-		temp = (*hashtable)[i];
-		while ((*hashtable)[i])
-		{
-			result = check_if_expandable(&(*hashtable)[i], data);
-			if (result == 0)
-			{
-				(*hashtable)[i] = temp;
-				return (result);
-			}
-			(*hashtable)[i] = (*hashtable)[i]->next;
-		}
-		(*hashtable)[i] = temp;
-		i++;
-	}
-	return (result);
-}
-
-// File: src/expand/expander_utils2.c
-
-static char	*fetch_in_array(char **str, int i, int len, char *arr)
-{
-	char	*value;
-
-	if (ft_strncmp((*str) + i, arr, len) == 0)
-	{
-		while (*arr != '=')
-			arr++;
-		arr++;
-		value = ft_strdup(arr);
-		return (value);
-	}
-	return (NULL);
-}
-
-char	*search_value(t_global **data, char **str, int i, int len)
-{
-	char	*value;
-	int		j;
-
-	value = NULL;
-	j = 0;
-	while (!value && (*data)->env[j])
-	{
-		value = fetch_in_array(str, i, len, (*data)->env[j]);
-		j++;
-	}
-	j = 0;
-	if ((*data)->exported)
-	{
-		while (!value && (*data)->exported[j])
-		{
-			value = fetch_in_array(str, i, len, (*data)->exported[j]);
-			j++;
-		}
-	}
-	return (value);
-}
-
-void	handle_expand_fail(t_tkn **node)
-{
-	t_tkn	*temp;
-
-	temp = *node;
-	while (temp->prev)
-		temp = temp->prev;
-	if (ft_strcmp(temp->content, "echo") == 0)
-	{
-		free((*node)->content);
-		temp = (*node)->prev;
-		temp->next = (*node)->next;
-		if ((*node)->next)
-			(*node)->next->prev = temp;
-		if (temp->space_after != (*node)->space_after)
-			temp->space_after = (*node)->space_after;
-		free(*node);
-		*node = temp;
-	}
-	if ((*node)->prev && (ft_strcmp((*node)->prev->content, ">") == 0
-			|| ft_strcmp((*node)->prev->content, "<") == 0))
-		ft_printf("\n%sminishell: %s: ambiguous redirect%s\n",
-			RED, (*node)->content, END);
-}
-
-// File: src/expand/expander_utils.c
-#include "../includes/minishell.h"
-
-t_bool	is_special_var_char(char c)
-{
-	if ((c >= 32 && c <= 47 && c != 35) || (c >= 58 && c <= 64 && c != 63)
-		|| (c >= 93 && c <= 96 && c != '_') || (c >= 123 && c <= 126))
-	{
-		return (true);
-	}
-	return (false);
-}
-
-t_bool	is_special_variable(char *var, t_bool print)
-{
-	if (!ft_strcmp(var, "$#") || !ft_strcmp(var, "$!") || !ft_strcmp(var, "$@")
-		|| !ft_strcmp(var, "$$") || !ft_strcmp(var, "$0")
-		|| !ft_strcmp(var, "$-") || !ft_strcmp(var, "$*"))
-	{
-		if (print)
-			ft_dprintf(2, "%s\nThis functionality is beyond Minishell's \
-			scope, ****@#$@***.\n\n%s", RED, END);
-		return (true);
-	}
-	return (false);
-}
-
-t_bool	is_var_name(t_tkn **node, int i, int len)
-{
-	if (((*node)->type[0] == 'v' && (*node)->content[i + len]
-			&& !is_special_var_char((*node)->content[i + len]))
-		|| ((*node)->type[0] == 's' && (*node)->content[i + len]
-			&& !is_special_var_char((*node)->content[i + len])))
-		return (TRUE);
-	if (!ft_strcmp((*node)->type, EXPT_VARIABLE) && (*node)->content[i + len]
-		&& !is_special_var_char((*node)->content[i + len]))
-		return (TRUE);
-	return (FALSE);
-}
-
-void	add_node_before(t_tkn **node, int i)
-{
-	t_tkn	*new_node;
-
-	new_node = ft_calloc(1, sizeof(t_tkn));
-	if (!new_node)
-		return ;
-	new_node->content = ft_strndup((*node)->content, i - 1);
-	new_node->type = STRING_STD;
-	new_node->next = (*node);
-	new_node->prev = (*node)->prev;
-	(*node)->prev->next = new_node;
-}
-
-t_tkn	*add_node_after(t_tkn **node, int i)
-{
-	t_tkn	*new_node;
-
-	new_node = ft_calloc(1, sizeof(t_tkn));
-	if (!new_node)
-		return (NULL);
-	new_node->content = ft_strdup((*node)->content + i);
-	new_node->type = STRING_STD;
-	new_node->next = (*node)->next;
-	new_node->prev = *node;
-	if ((*node)->next)
-		(*node)->next->prev = new_node;
-	return (new_node);
-}
-
-// File: src/expand/heredoc_expander.c
-#include "../../includes/minishell.h"
-
-static void	update_line(char **line, int len, char **value)
-{
-	char	*new_line;
-	char	*temp;
-	int		line_len;
-
-	line_len = 0;
-	temp = NULL;
-	while ((*line)[line_len] != '$')
-		line_len++;
-	new_line = ft_strndup((*line), line_len);
-	if ((*line)[line_len] == '$')
-	{
-		if (*value)
-			temp = ft_strjoin(new_line, *value);
-		else
-			temp = ft_strdup(new_line);
-		free(new_line);
-		new_line = ft_strjoin(temp, (*line + line_len + len + 1));
-	}
-	free(temp);
-	free(*line);
-	free(*value);
-	*line = ft_strdup(new_line);
-	free(new_line);
-}
-
-int	get_var_value1(t_global **data, char **line, int i)
-{
-	int		len;
-	char	*value;
-
-	len = 0;
-	value = NULL;
-	while ((*line)[i + len] && !is_special_var_char((*line)[i + len]))
-		len++;
-	if (((*line)[i] == '?' && !(*line)[i + 1])
-			|| !ft_strncmp((*line) + i, "? ", 2))
-		value = ft_itoa((*data)->ret);
-	else if (is_special_variable(*line, FALSE))
-	{
-		printf("%s\nThis functionality is beyond \
-		Minishell's scope.\n\n%s", RED, END);
-		return (0);
-	}
-	else
-		value = search_value(data, line, i, len);
-	update_line(line, len, &value);
-	return (1);
-}
-
-void	expand_heredoc(t_global *data, char **line)
-{
-	int		i;
-
-	i = 0;
-	while (i < (int)ft_strlen(*line))
-	{
-		if ((*line)[i] == '$')
-		{
-			i++;
-			get_var_value1(&data, line, i);
-		}
-		i++;
-	}
-}
-
-// File: src/lexer/lexer.c
-#include "../includes/minishell.h"
-
-
-int	check_valid_input(t_tkn **node)
-{
-	if ((is_double_special_token((*node)) && !(*node)->delimiter)
-		|| (!(*node)->next && !ft_strcmp((*node)->type, SPECIAL_CHAR)
-			&& !(*node)->delimiter) || is_and_or((*node)->content))
-	{
-		ft_dprintf(2, "Syntax error.\n");
-		return (0);
-	}
-	return (1);
-}
-
-/**
- * Traverses through token nodes and processes redirections.
- *
- * @param[in, out] node Pointer to the current token node to check.
- */
-void	check_redirects(t_tkn **node)
-{
-	t_tkn	*head;
-
-	head = *node;
-	while (*node)
-	{
-		if ((*node)->content && is_redir((*node)->content)
-			&& (*node)->next)
-		{
-			parse_redir(node, &head);
-		}
-		*node = (*node)->next;
-	}
-	*node = head;
-}
-
-
-int	lexer(t_tkn	*(*hashtable)[TABLE_SIZE])
-{
-	int		i;
-	t_tkn	*temp;
-
-	i = 0;
-	while ((*hashtable)[i])
-	{
-		temp = (*hashtable)[i];
-		while ((*hashtable)[i])
-		{
-			if (!check_valid_input(&(*hashtable)[i]))
-			{
-				(*hashtable)[i] = temp;
-				return (0);
-			}
-			(*hashtable)[i] = (*hashtable)[i]->next;
-		}
-		(*hashtable)[i] = temp;
-		remove_pipe(&(*hashtable)[i], i);
-		check_redirects(&(*hashtable)[i]);
-		i++;
-	}
-	return (1);
-}
-
-// File: src/lexer/lexer_utils2.c
-t_bool	is_redir_in(char *c)
-{
-	if (c && !ft_strcmp(c, LESS_THAN))
-		return (true);
-	return (false);
-}
-
-t_bool	is_redir_out(char *c)
-{
-	if (c && !ft_strcmp(c, GREATER_THAN))
-		return (true);
-	return (false);
-}
-
-t_bool	is_append(char *c)
-{
-	if (c && !ft_strcmp(c, DOUBLE_GREATER_THAN))
-		return (true);
-	return (false);
-}
-
-t_bool	is_heredoc(char *content)
-{
-	if (content && strcmp(content, DOUBLE_LESS_THAN) == 0)
-		return (TRUE);
-	return (FALSE);
-}
-
-t_bool	is_redir(char *sig)
-{
-	if (is_redir_in(sig) || is_redir_out(sig)
-		|| is_heredoc(sig) || is_append(sig))
-		return (true);
-	return (false);
-}
-
-// File: src/lexer/lexer_utils.c
-#include "../includes/minishell.h"
-
-void	remove_pipe(t_tkn **node, int i)
-{
-	t_tkn	*temp;
-
-	if (i > 0 && is_pipe((*node)->content))
-	{
-		temp = (*node)->next;
-		free((*node)->content);
-		free(*node);
-		*node = temp;
-		if (*node)
-			(*node)->prev = NULL;
-	}
-}
-
-// File: src/lexer/parse_redir.c
-#include "../../includes/minishell.h"
-
-void    init_redir_args(char *(*args)[TABLE_SIZE]);
-void    check_heredoc(t_tkn **node);
-void    update_redir_files_list(char *(*redir)[TABLE_SIZE],
-            char *sig, char *new_arg);
-
-void    update_node_after_heredoc(t_tkn **node)
-{
-    t_tkn    *temp;
-
-    free((*node)->content);
-    (*node)->content = NULL;
-    if ((*node)->prev)
-        temp = (*node)->prev;
-    else
-    {
-        temp = *node;
-        *node = (*node)->next;
-    }
-    temp->next = (*node)->next;
-    if (temp && temp->next)
-        temp->next->prev = temp;
-    if (*node)
-    {
-        free((*node)->content);
-        free(*node);
-    }
-    if (temp->prev && temp->prev->prev)
-        free(temp->prev->prev);
-    (*node) = temp;
-}
-
-static void    handle_no_prev_node(t_tkn **node)
-{
-    t_tkn    *temp;
-
-    free((*node)->content);
-    (*node)->content = NULL;
-    if ((*node)->next && (*node)->next->next)
-    {
-        temp = (*node)->next;
-        ft_memdel(*node);
-        *node = temp;
-        temp = (*node)->next;
-        ft_memdel((*node)->content);
-        ft_memdel(*node);
-        temp->prev = NULL;
-    }
-    else
-    {
-        temp = *node;
-        ft_memdel((*node)->next->content);
-        ft_memdel((*node)->next);
-        temp->next = NULL;
-    }
-    if (temp->next)
-        temp->next->prev = temp;
-    *node = temp;
-}
-
-static void    handle_prev_node(t_tkn **node)
-{
-    t_tkn    *temp;
-
-    temp = (*node)->prev;
-    *node = (*node)->next;
-    free((*node)->prev->content);
-    free((*node)->prev);
-    free((*node)->content);
-    temp->next = (*node)->next;
-    free(*node);
-    if (temp->next)
-        temp->next->prev = temp;
-    *node = temp;
-}
-
-static void    update_node_after_redir(t_tkn **node)
-{
-    if ((*node)->prev)
-        handle_prev_node(node);
-    else
-        handle_no_prev_node(node);
-}
-
-void    parse_redir(t_tkn **node, t_tkn **head)
-{
-    if (is_heredoc((*node)->content))
-        check_heredoc(node);
-    if (!ft_strcmp((*head)->content, (*node)->content)
-        && (*node)->next && (*node)->next->next)
-        *head = (*node)->next->next;
-    if (!(*head)->redir[0])
-        init_redir_args(&(*head)->redir);
-    update_redir_files_list(&(*head)->redir,
-        (*node)->content, (*node)->next->content);
-    if (is_heredoc((*node)->content))
-        update_node_after_heredoc(node);
-    else
-        update_node_after_redir(node);
-}
-
-// File: src/lexer/parse_redir_utils.c
-void	init_redir_args(char *(*args)[TABLE_SIZE])
-{
-	int	i;
-
-	i = 0;
-	while (i < TABLE_SIZE)
-	{
-		(*args)[i] = NULL;
-		i++;
-	}
-	return ;
-}
-
-void	check_heredoc(t_tkn **node)
-{
-	if (strncmp((*node)->content, DOUBLE_LESS_THAN, 2) == 0
-		&& (*node)->next && !is_special_token((*node)->next->content))
-	{
-		(*node)->delimiter = ft_strdup((*node)->next->content);
-	}
-}
-
-void	update_redir_files_list(char *(*redir)[TABLE_SIZE],
-			char *sig, char *new_arg)
-{
-	int		i;
-	char	*new_sig;
-
-	i = 0;
-	if (is_redir_in(sig) || is_redir_out(sig))
-		new_sig = ft_strjoin(sig, " ");
-	else
-		new_sig = ft_strdup(sig);
-	if ((*redir)[i])
-	{
-		while ((*redir)[i])
-			i++;
-	}
-	(*redir)[i] = ft_strjoin(new_sig, new_arg);
-	free(new_sig);
-	return ;
-}
-
-// File: src/main/exit_status.c
-#include "../../includes/minishell.h"
-
-int	is_folder(char *command)
-{
-	struct stat	statbuf;
-
-	if (stat(command, &statbuf) != 0)
-		return (0);
-	if (S_ISDIR(statbuf.st_mode))
-	{
-		if (*command == '.')
-			command++;
-		if (*command == '.')
-			command++;
-		if (*command == '/')
-			return (TRUE);
-	}
-	return (FALSE);
-}
-
-void	external_exit(int exit_status)
-{
-	rl_clear_history();
-	close_all_fds();
-	exit(exit_status);
-}
-
-// File: src/main/main.c
-#include "../includes/minishell.h"
-
-t_global	*init_data(void)
-{
-	t_global	*data;
-
-	data = ft_calloc(1, sizeof(t_global));
-	if (!data)
-		return (NULL);
-	data->usr_input = NULL;
-	data->env = NULL;
-	data->cur_path = getcwd(NULL, 0);
-	data->ret = 0;
-	data->exit = 0;
-	data->original_stdin = STDIN_FILENO;
-	data->original_stdout = STDOUT_FILENO;
-	data->env = ft_strarr_dup(__environ);
-	data->is_exec = FALSE;
-	data->is_heredoc = FALSE;
-	data->exported = NULL;
-	data->usr = ft_strdup(ft_getenv("USER", &data));
-	init_hashtable(&data->hashtable);
-	return (data);
-}
-
-int	main(void)
-{
-	static t_global	*data;
-	int				result;
-
-	data = init_data();
-	data->usr_input = NULL;
-	while (!data->exit)
-	{
-		define_prompt_signals();
-		if (!data->exit && handle_prompt(&data) == -1)
-			break ;
-		clean_input_and_hashtable(&data);
-	}
-	result = data->ret;
-	clean_stuff(&data);
-	return (result);
-}
-
-// File: src/main/main_utils.c
-#include "../includes/minishell.h"
-
-void	free_redir_args(char *(*args)[TABLE_SIZE])
-{
-	int		i;
-
-	i = 0;
-	if ((*args)[i])
-	{
-		while ((*args)[i] != NULL)
-		{
-			free((*args)[i]);
-			i++;
-		}
-	}
-}
-
-void	free_hashtable(t_tkn *(*hashtable)[TABLE_SIZE])
-{
-	int		i;
-	t_tkn	*temp;
-
-	i = 0;
-	temp = NULL;
-	while ((*hashtable)[i] != NULL)
-	{
-		while ((*hashtable)[i] != NULL)
-		{
-			temp = (*hashtable)[i]->next;
-			if ((*hashtable)[i]->content)
-			{
-				//printf("%s\n", (*hashtable)[i]->content);
-				free((*hashtable)[i]->content);
-			}
-			if ((*hashtable)[i]->delimiter)
-				free((*hashtable)[i]->delimiter);
-			free_redir_args(&(*hashtable)[i]->redir);
-			free((*hashtable)[i]);
-			(*hashtable)[i] = temp;
-		}
-		i++;
-	}
-}
-
-void	clean_stuff(t_global **data)
-{
-	if (data == NULL || *data == NULL)
-		return ;
-	if ((*data)->cur_path != NULL)
-	{
-		free((*data)->cur_path);
-		(*data)->cur_path = NULL;
-	}
-	ft_strarr_free((*data)->env, ft_strarr_len((*data)->env));
-	if ((*data)->exported != NULL)
-		ft_strarr_free((*data)->exported, ft_strarr_len((*data)->exported));
-	free_hashtable(&(*data)->hashtable);
-	rl_clear_history();
-	close_all_fds();
-	ft_memdel((*data)->usr);
-	ft_memdel(*data);
-	*data = NULL;
-}
-
-void	restore_fds_close(t_global *data)
-{
-	dup2(data->original_stdin, STDIN_FILENO);
-	close(data->original_stdin);
-	dup2(data->original_stdout, STDOUT_FILENO);
-	close(data->original_stdout);
-}
-
-void	clean_input_and_hashtable(t_global **data)
-{
-	int		i;
-	char	temp[30];
-	char	*num_part;
-
-	ft_memdel((*data)->usr_input);
-	free_hashtable(&(*data)->hashtable);
-	// restore_fds_close(*data);
-	// restore_fds((*data)->original_fds);
-	//restore_original_fds((*data)->original_fds);
-	i = 0;
-	while (i < 100)
-	{
-		strcpy(temp, ".tmp/heredoc");
-		num_part = ft_itoa(i);
-		if (num_part)
-		{
-			strcat(temp, num_part);
-			free(num_part);
-		}
-		unlink(temp);
-		i++;
-	}
-}
-
-// File: src/main/prompt.c
-#include "../includes/minishell.h"
-
-char	*cwd_error(void)
-{
-	static char	prompt[PATH_MAX];
-
-	ft_bzero(prompt, sizeof(prompt));
-	ft_strlcat(prompt, "minishell: ", PATH_MAX);
-	ft_strlcat(prompt, strerror(errno), PATH_MAX);
-	return (prompt);
-}
-
-char	*print_cwd(t_global **data)
-{
-	static char	prompt[PATH_MAX];
-	char		*cwd;
-	int			home;
-
-	cwd = getcwd(NULL, 0);
-	ft_bzero(prompt, sizeof(prompt));
-	if (!cwd)
-		return (cwd_error());
-	home = ft_strlen(ft_getenv("HOME", data));
-	ft_strlcat(prompt, BLUE, PATH_MAX);
-	if (ft_strncmp(cwd, ft_getenv("HOME", data), home) == 0)
-	{
-		ft_strlcat(prompt, (*data)->usr, PATH_MAX);
-		ft_strlcat(prompt, ":~", PATH_MAX);
-		ft_strlcat(prompt, &cwd[home], PATH_MAX);
-	}
-	else
-		ft_strlcat(prompt, cwd, PATH_MAX);
-	ft_strlcat(prompt, "$ ", PATH_MAX);
-	ft_strlcat(prompt, END, PATH_MAX);
-	free(cwd);
-	return (prompt);
-}
-
-int	handle_prompt(t_global **data)
-{
-	int	input;
-
-	input = 0;
-	(*data)->usr_input = NULL;
-	(*data)->usr_input = readline(print_cwd(data));
-	if (!(*data)->usr_input)
-		return (-1);
-	if ((*data)->usr_input[0])
-	{
-		//external_exit(EXIT_SUCCESS);
-		add_history((*data)->usr_input);
-		input = tokenize(data);
-		if (input == -1)
-			return (-1);
-		if (input == 1)
-		{
-			input = parse(&(*data)->hashtable, data);
-			if (input == 1)
-				(*data)->ret = handle_execution(*data);
-		}
-	}
-	return (1);
-}
-
-// File: src/parse/parser.c
-#include "../includes/minishell.h"
-
-char	*get_tkn_type(t_tkn *node)
-{
-	if (!node->type)
-	{
-		if (node->content[0] == SIMPLE_QUOTE)
-			return (STRING_STRONG);
-		else if (node->content[0] == DOUBLE_QUOTE)
-			return (STRING_STD);
-		else if (is_special_token(node->content))
-			return (SPECIAL_CHAR);
-		else if ((node->content[0] == '$'
-				&& identifier_is_valid(node->content + 1))
-			|| !strcmp(node->content, "$?")
-			|| is_special_variable(node->content, FALSE))
-			return (VARIABLE);
-		else if (is_export_var(node->content))
-			return (EXPT_VARIABLE);
-		else if (!node->prev || is_pipe(node->prev->content))
-			return (COMMAND);
-		else
-			return (ARGUMENT);
-	}
-	return (node->type);
-}
-
-void	remove_quotes(char **content)
-{
-	char	*new_content;
-	int		len;
-	int		i;
-
-	len = ft_strlen(*content) - 1;
-	if (ft_strcmp(*content, PIPE)
-		&& ((*content)[0] == 34 || (*content)[0] == 39))
-	{
-		new_content = ft_calloc(len, sizeof(char));
-		i = 1;
-		while (i < len)
-		{
-			new_content[i - 1] = (*content)[i];
-			i++;
-		}
-		ft_strlcpy(*content, new_content, len);
-		free(new_content);
-	}
-}
-
-void	handle_export(t_tkn **node)
-{
-	char	*new_content;
-	t_tkn	*head;
-	t_tkn	*temp;
-
-	new_content = NULL;
-	head = *node;
-	*node = (*node)->next;
-	while ((*node) && is_export_var((*node)->content) && (*node)->next)
-	{
-		new_content = ft_strjoin((*node)->content, (*node)->next->content);
-		free((*node)->content);
-		(*node)->content = ft_strdup(new_content);
-		temp = (*node)->next->next;
-		if (temp)
-			temp->prev = *node;
-		free(new_content);
-		free((*node)->next->content);
-		free((*node)->next);
-		(*node)->next = temp;
-		*node = (*node)->next;
-	}
-	*node = head;
-}
-
-int	parse(t_tkn *(*hashtable)[TABLE_SIZE], t_global **data)
-{
-	int		i;
-	int		syntax;
-	t_tkn	*temp;
-
-	i = 0;
-	while ((*hashtable)[i])
-	{
-		temp = (*hashtable)[i];
-		while ((*hashtable)[i])
-		{
-			(*hashtable)[i]->type = get_tkn_type((*hashtable)[i]);
-			remove_quotes(&(*hashtable)[i]->content);
-			(*hashtable)[i] = (*hashtable)[i]->next;
-		}
-		(*hashtable)[i] = temp;
-		if (!ft_strcmp((*hashtable)[i]->content, "export"))
-			handle_export(hashtable[i]);
-		i++;
-	}
-	syntax = 0;
-	if (expand(hashtable, data) == 1)
-		syntax = lexer(hashtable);
-	return (syntax);
-}
-
-// File: src/parse/parser_utils2.c
-#include "../../includes/minishell.h"
-
-t_bool	is_export_var(char *content)
-{
-	int	i;
-
-	i = 0;
-	while (content[i])
-	{
-		if (content[i] == '=' && !content[i + 1])
-			return (true);
-		i++;
-	}
-	return (false);
-}
-
-t_bool	check_there_is_var(char *content)
-{
-	int	i;
-
-	i = 0;
-	while (content[i])
-	{
-		if (content[i] == '$' && (ft_isalpha(content[i + 1])
-				|| content[i + 1] == '_'))
-			return (true);
-		i++;
-	}
-	return (false);
-}
-
-t_bool	is_empty_str(char *content, char quote)
-{
-	int	i;
-
-	i = 1;
-	while (content[i] && content[i] != quote)
-	{
-		if (content[i] != 32)
-			return (false);
-		i++;
-	}
-	return (true);
-}
-
-// File: src/parse/parser_utils.c
-#include "../includes/minishell.h"
-
-t_bool	is_pipe(char *token)
-{
-	if (token && (ft_strcmp(token, PIPE) == 0))
-		return (true);
-	return (false);
-}
-
-t_bool	is_and_or(char *token)
-{
-	if (token && (ft_strcmp(token, "&&") == 0
-			|| ft_strcmp(token, "||") == 0))
-		return (true);
-	return (false);
-}
-
-t_bool	is_pipe_and_or(char *token)
-{
-	if (token && (ft_strcmp(token, PIPE) == 0
-			|| ft_strcmp(token, "&&") == 0
-			|| ft_strcmp(token, "||") == 0))
-		return (true);
-	return (false);
-}
-
-t_bool	is_special_token(char *token)
-{
-	if (token
-		&& ((ft_strncmp(token, PIPE, 1) == 0)
-			|| (ft_strncmp(token, AMPERSAND, 1) == 0)
-			|| (ft_strncmp(token, GREATER_THAN, 1) == 0)
-			|| (ft_strncmp(token, LESS_THAN, 1) == 0)
-			|| (ft_strncmp(token, "||", 2) == 0)
-			|| (ft_strncmp(token, "&&", 2) == 0)
-			|| (ft_strncmp(token, DOUBLE_GREATER_THAN, 2) == 0)
-			|| (ft_strncmp(token, DOUBLE_LESS_THAN, 2) == 0)))
-		return (true);
-	else
-		return (false);
-}
-
-t_bool	is_double_special_token(t_tkn *node)
-{
-	if ((!node->next || (node->next && is_special_token(node->next->content)))
-		&& is_special_token(node->content) && node->next
-		&& (!is_pipe(node->content) && !is_redir_in(node->next->content)))
-		return (true);
-	return (false);
-}
-
-// File: src/redirections/handle_redir.c
-#include "../../includes/minishell.h"
-
-void	save_original_fd_in(int original_fds[2])
-{
-	if (original_fds[IN] == -1)
-		original_fds[IN] = dup(STDIN_FILENO);
-}
-
-void	save_original_fd_out(int original_fds[2])
-{
-	if (original_fds[OUT] == -1)
-		original_fds[OUT] = dup(STDOUT_FILENO);
-}
-
-int	handle_input_redirect(char *redir, int here_num, int original_fds[2])
-{
-
-	save_original_fd_in(original_fds);
-	if (redirect_input(redir, here_num) == 0)
-	{
-		redirect_fd(original_fds[IN], STDIN_FILENO);
-		return (0);
-	}
-	return (1);
-}
-
-int	handle_output_redirect(char *redir, int original_fds[2])
-{
-	save_original_fd_out(original_fds);
-	if (redirect_output(redir) == 0)
-	{
-		redirect_fd(original_fds[OUT], STDOUT_FILENO);
-		return (0);
-	}
-	return (1);
-}
-
-int	handle_redirects(t_global *data, int ori_fds[2])
-{
-	int	i;
-
-	i = 0;
-	
-	ori_fds[IN] = -1;
-	ori_fds[OUT] = -1;
-	while (data->hashtable[0]->redir[i])
-	{
-		if (data->hashtable[0]->redir[i][0] == '<')
-		{
-			if (!handle_input_redirect(data->hashtable[0]->redir[i], i, ori_fds))
-				return (0);
-		}
-		if (data->hashtable[0]->redir[i][0] == '>')
-		{
-			if (!handle_output_redirect(data->hashtable[0]->redir[i], ori_fds))
-				return (0);
-		}
-		// if (ft_strncmp(data->hashtable[0]->redir[i], "<<", 2) == 0)
-		// {
-		// 	save_original_fd_in(ori_fds);
-		// 	redirect_heredoc(data, i, &data->hashtable[0]->redir[i][2]);
-		// }
-		i++;
-	}
-	return (1);
-}
-
-// File: src/redirections/redir.c
-#include "../../includes/minishell.h"
-
-void	write_in_heredoc(t_global *data, int heredoc_number, char *eof)
-{
-	int		tmp_file_fd;
-	char	*filename;
-	char	*line;
-
-	tmp_file_fd = 0;
-	filename = tmp_filename(heredoc_number);
-	tmp_file_fd = get_fd(filename);
-	line = readline("> ");
-	while (line && ft_strncmp(line, eof, (ft_strlen(eof) + 1)))
-	{
-		expand_heredoc(data, &line);
-		ft_putstr_fd(line, tmp_file_fd);
-		ft_putchar_fd('\n', tmp_file_fd);
-		free(line);
-		line = readline("> ");
-	}
-	if (!line)
-		ft_dprintf(STDOUT_FILENO, "%sminishell: warning: \
-		heredoc delimited by EOF (wanted '%s')%s\n", YELLOW, eof, END);
-	close(tmp_file_fd);
-	free(filename);
-	free(line);
-	//redirect_fd(tmp_file_fd, STDIN_FILENO);
-	//exit(EXIT_SUCCESS);
-}
-
-void	redirect_heredoc(t_global *data, int heredoc_number, char *eof)
-{
-	int		pid;
-
-	pid = fork();
-	define_heredoc_signals(pid);
-	if (pid == -1)
-	{
-		perror("fork");
-		exit(EXIT_FAILURE);
-	}
-	if (pid == 0)
-		write_in_heredoc(data, heredoc_number, eof);
-	else
-	{
-		data->ret = wait_for_child(pid, TRUE);
-		define_prompt_signals();
-	}
-	external_exit(EXIT_SUCCESS);
-}
-
-// int	redirect_input(char *input_redirect)
-// {
-// 	int		fd;
-
-// 	fd = open(&input_redirect[2], O_RDONLY, FD_CLOEXEC);
-// 	if (fd == -1)
-// 	{
-// 		ft_dprintf(STDERR_FILENO, "open: %s: %s\n",
-// 			&input_redirect[2], strerror(errno));
-// 		return (0);
-// 	}
-// 	else
-// 		redirect_fd(fd, STDIN_FILENO);
-// 	return (1);
-// }
-
-// int	redirect_output(char *output_redirect)
-// {
-// 	int		fd;
-
-// 	if (output_redirect[1] == '>')
-// 		fd = open(&output_redirect[2], O_WRONLY | O_CREAT | O_APPEND, 0644);
-// 	else
-// 		fd = open(&output_redirect[2], O_WRONLY | O_CREAT | O_TRUNC, 0644);
-// 	if (fd == -1)
-// 	{
-// 		ft_dprintf(STDERR_FILENO, "open: %s: %s\n",
-// 			&output_redirect[2], strerror(errno));
-// 		return (0);
-// 	}
-// 	else
-// 		redirect_fd(fd, STDOUT_FILENO);
-// 	return (1);
-// }
-
-
-int	redirect_input(char *input_redirect, int i)
-{
-	int		fd;
-	char 	*filename;
-
-	if (input_redirect[1] == '<')
-	{
-		filename = tmp_filename(i);
-		fd = open(filename, O_RDONLY, FD_CLOEXEC);
-		free(filename);
-	}
-	else
-		fd = open(&input_redirect[2], O_RDONLY, FD_CLOEXEC);
-	if (fd == -1)
-	{
-		ft_dprintf(STDERR_FILENO, "open: %s: %s\n",
-			&input_redirect[2], strerror(errno));
-		return (0);
-	}
-	else
-		redirect_fd(fd, STDIN_FILENO);
-	return (1);
-}
-
-int	redirect_output(char *output_redirect)
-{
-	int	fd;
-
-	if (output_redirect[1] == '>')
-		fd = open(&output_redirect[2], O_WRONLY | O_CREAT | O_APPEND, 0644);
-	else
-		fd = open(&output_redirect[2], O_WRONLY | O_CREAT | O_TRUNC, 0644);
-	if (fd == -1)
-	{
-		ft_dprintf(STDERR_FILENO, "open: %s\n", strerror(errno));
-		return (0);
-	}
-	else
-	{
-		redirect_fd(fd, STDOUT_FILENO);
-	}
-	return (1);
-}
-
-// File: src/redirections/redir_utils2.c
-#include "../../includes/minishell.h"
-
-void	close_extra_fds(void)
-{
-	int	last_open_fd;
-
-	last_open_fd = open("/tmp/last_fd", O_RDWR | O_CREAT, 0666);
-	if (last_open_fd == -1)
-		ft_dprintf(STDERR_FILENO, "minishell: %s: %s\n",
-			"/tmp/last_fd", strerror(errno));
-	while (last_open_fd > STDERR_FILENO)
-	{
-		close(last_open_fd);
-		last_open_fd--;
-	}
-}
-
-void	close_all_fds(void)
-{
-	close_extra_fds();
-	close(STDIN_FILENO);
-	close(STDOUT_FILENO);
-	close(STDERR_FILENO);
-}
-
-void	redirect_fd(int fd_to_redirect, int fd_location)
-{
-	dup2(fd_to_redirect, fd_location);
-	close(fd_to_redirect);
-}
-
-void	redirect_fds(int fd_in, int fd_out)
-{
-	if (fd_in != STDIN_FILENO)
-		redirect_fd(fd_in, STDIN_FILENO);
-	if (fd_out != STDOUT_FILENO)
-		redirect_fd(fd_out, STDOUT_FILENO);
-}
-
-void	restore_original_fds(int original_fds[2])
-{
-	if (original_fds[IN] != -1)
-		redirect_fd(original_fds[IN], STDIN_FILENO);
-	if (original_fds[OUT] != -1)
-		redirect_fd(original_fds[OUT], STDOUT_FILENO);
-}
-
-// File: src/redirections/redir_utils.c
-#include "../../includes/minishell.h"
-
-char	*tmp_filename(int heredoc_number)
-{
-	char	filename[30];
-	char	*number_str;
-
-	ft_bzero(filename, 30);
-	number_str = ft_itoa(heredoc_number);
-	ft_strlcat(filename, ".tmp/heredoc", 30);
-	ft_strlcat(filename, number_str, 30);
-	free(number_str);
-	return (ft_strdup(filename));
-}
-
-t_bool	ends_with_linebreak(char *line)
-{
-	int	i;
-
-	i = 0;
-	while (line[i + 1] != '\0')
-		i++;
-	if (line[i] == '\n')
-		return (TRUE);
-	return (FALSE);
-}
-
-int	get_fd(char *filename)
-{
-	int	tmp_file_fd;
-
-	tmp_file_fd = open(filename, O_WRONLY | O_CREAT | O_TRUNC, 0644);
-	if (tmp_file_fd == -1)
-	{
-		ft_dprintf(STDERR_FILENO, "open: %s: %s\n", filename, strerror(errno));
-		free(filename);
-		return (-1);
-	}
-	return (tmp_file_fd);
-}
-
-// File: src/signals/signals.c
-#include "minishell.h"
-
-static void	handle_sigint(int sig)
-{
-	(void)sig;
-	ft_putstr_fd("\n", STDOUT_FILENO);
-	rl_on_new_line();
-	rl_replace_line("", 0);
-	rl_redisplay();
-}
-
-void	define_prompt_signals(void)
-{
-	struct sigaction	sa_sigint;
-	struct sigaction	sa_sigquit;
-
-	sa_sigint.sa_handler = &handle_sigint;
-	sa_sigint.sa_flags = 0;
-	sigemptyset(&sa_sigint.sa_mask);
-	sigaction(SIGINT, &sa_sigint, NULL);
-	sa_sigquit.sa_handler = SIG_IGN;
-	sa_sigquit.sa_flags = 0;
-	sigemptyset(&sa_sigquit.sa_mask);
-	sigaction(SIGQUIT, &sa_sigquit, NULL);
-}
-
-void	define_exec_signals(int pid)
-{
-	struct sigaction	sa_sigint;
-	struct sigaction	sa_sigquit;
-
-	sa_sigint.sa_flags = 0;
-	sigemptyset(&sa_sigint.sa_mask);
-	if (pid == 0)
-		sa_sigint.sa_handler = SIG_DFL;
-	else
-		sa_sigint.sa_handler = SIG_IGN;
-	sigaction(SIGINT, &sa_sigint, NULL);
-	sa_sigquit.sa_flags = 0;
-	sigemptyset(&sa_sigquit.sa_mask);
-	if (pid == 0)
-		sa_sigquit.sa_handler = SIG_DFL;
-	else
-		sa_sigquit.sa_handler = SIG_IGN;
-	sigaction(SIGQUIT, &sa_sigquit, NULL);
-}
-
-void	define_heredoc_signals(int pid)
-{
-	struct sigaction	sa_sigint;
-	struct sigaction	sa_sigquit;
-
-	sa_sigint.sa_flags = 0;
-	sigemptyset(&sa_sigint.sa_mask);
-	if (pid == 0)
-		sa_sigint.sa_handler = SIG_DFL;
-	else
-		sa_sigint.sa_handler = SIG_IGN;
-	sigaction(SIGINT, &sa_sigint, NULL);
-	sa_sigquit.sa_flags = 0;
-	sigemptyset(&sa_sigquit.sa_mask);
-	sa_sigquit.sa_handler = SIG_IGN;
-	sigaction(SIGQUIT, &sa_sigquit, NULL);
-}
-
-// File: src/token/token.c
-#include "../includes/minishell.h"
-
-/**
- * Checks for closed quotes starting from a given index in a string.
- *
- * @param[in] input The input string to check.
- * @param[in] i The index to start checking from.
- * @return Length of the quoted segment if properly closed, -1 if not closed,
- *         0 if no quotes are found.
- */
-int	check_quotes(char *input, int i)
-{
-	int		len;
-	char	start;
-
-	len = 0;
-	if (input[i] == SIMPLE_QUOTE)
-		start = SIMPLE_QUOTE;
-	if (input[i] == DOUBLE_QUOTE)
-		start = DOUBLE_QUOTE;
-	i++;
-	len++;
-	while (input[i] && start != input[i])
-	{
-		len++;
-		i++;
-	}
-	if (!input[i])
-		return (-1);
-	if (input[i] == start)
-		return (len + 1);
-	return (0);
-}
-
-/**
- * Determines if a character is considered special character for tokenization.
- *
- * @param[in] c The character to evaluate.
- * @return True if the character is special ('|', '&', '<', '>'),
- *  false otherwise.
- */
-t_bool	is_special_char(char c)
-{
-	if (c == '|' || c == '&' || c == '<' || c == '>')
-		return (true);
-	return (false);
-}
-
-/**
- * Calculates the length of the token starting from the specified index.
- *
- * @param[in] input The string to parse.
- * @param[in] i The start index for token measurement.
- * @return The length of the token.
- */
-int	get_token_len(char *input, int i)
-{
-	int	len;
-
-	len = 0;
-	if (is_special_char(input[i]))
-	{
-		len++;
-		if (input[i + 1] && input[i + 1] == input[i])
-			len++;
-	}
-	else if (input[i] == SIMPLE_QUOTE || input[i] == DOUBLE_QUOTE)
-		len = check_quotes(input, i);
-	else
-	{
-		if (input[i + len] == '$')
-			len++;
-		while (input[i + len] && input[i + len] != ' ' && input[i + len] != '$'
-			&& !is_special_char(input[i + len])
-			&& input[i + len] != SIMPLE_QUOTE
-			&& input[i + len] != DOUBLE_QUOTE)
-			len++;
-	}
-	return (len);
-}
-
-int	error_open_quote(void)
-{
-	printf("Error: open quote.\n");
-	return (0);
-}
-
-/**
- * Tokenizes the user input stored in global data.
- *
- * @param[in, out] data The global data structure containing user input.
- * @return 1 on successful tokenization, 0 on error (e.g., open quote).
- */
-int	tokenize(t_global **data)
-{
-	int		i;
-	int		len;
-
-	i = 0;
-	len = 0;
-	while ((*data)->usr_input[i])
-	{
-		while ((*data)->usr_input[i] == ' ')
-			i++;
-		len = get_token_len((*data)->usr_input, i);
-		if (len == -1)
-		{
-			printf("Error: open quote.\n");
-			return (0);
-		}
-		if (len > 0)
-			populate_hashtable(data, i, len);
-		i += len;
-	}
-	if (len == 0)
-		return (0);
-	return (1);
-}
-
-// File: src/token/token_utils.c
-#include "../includes/minishell.h"
-
-void	init_hashtable(t_tkn *(*hashtable)[TABLE_SIZE])
-{
-	int	i;
-
-	i = 0;
-	while (i < TABLE_SIZE)
-	{
-		(*hashtable)[i] = NULL;
-		i++;
-	}
-	return ;
-}
-
-char	*get_token(char *input, int i, int len)
-{
-	char	*token;
-
-	token = ft_calloc(len + 1, sizeof(char));
-	if (!token)
-		return (NULL);
-	while (--len >= 0)
-		token[len] = input[i + len];
-	return (token);
-}
-
-t_tkn	*add_node(t_tkn **tkn_node, char **content)
-{
-	t_tkn	*new_node;
-	t_tkn	*temp;
-
-	new_node = ft_calloc(1, sizeof(t_tkn));
-	temp = NULL;
-	if (!new_node)
-		return (NULL);
-	new_node->content = ft_strdup(*content);
-	new_node->space_after = TRUE;
-	new_node->next = NULL;
-	if (!(*tkn_node))
-		(*tkn_node) = new_node;
-	else
-	{
-		temp = (*tkn_node);
-		while ((*tkn_node)->next != NULL)
-			(*tkn_node) = (*tkn_node)->next;
-		(*tkn_node)->next = new_node;
-		new_node->prev = (*tkn_node);
-		*tkn_node = temp;
-	}
-	return (new_node);
-}
-
-void	check_non_spaced_var(char *input, int i, t_tkn **node)
-{
-	t_tkn	*temp;
-
-	if ((*node) && !strcmp((*node)->content, "echo")
-		&& input[i - 1] != ' ')
-	{
-		temp = *node;
-		while ((*node)->next != NULL)
-			*node = (*node)->next;
-		(*node)->space_after = FALSE;
-		*node = temp;
-	}
-}
-
-void	populate_hashtable(t_global **data, int idx, int len)
-{
-	char	*token;
-	int		i;
-
-	token = get_token((*data)->usr_input, idx, len);
-	i = 0;
-	if (ft_strncmp(token, PIPE, 1) == 0)
-	{
-		while ((*data)->hashtable[i])
-			i++;
-	}
-	else
-	{
-		if ((*data)->hashtable[i]
-			&& strcmp((*data)->hashtable[i]->content, "echo") == 0)
-			check_non_spaced_var((*data)->usr_input, idx,
-				&(*data)->hashtable[i]);
-		while ((*data)->hashtable[i + 1] != NULL)
-			i++;
-	}
-	add_node(&(*data)->hashtable[i], &token);
-	free(token);
-}
-
diff --git a/errors b/errors
index e52ab0d..6fd805e 100644
--- a/errors
+++ b/errors
@@ -1,16 +1,38 @@
+fde-alen:~/Documents/minishell$ export test="echo hello"
+fde-alen:~/Documents/minishell$ $test
+minishell: echo hello: command not found
+
 fde-alen:~/Documents/Projects/minishell/minishell29Apr/minishell_tester$ cat minishell.h | grep ");"$
 cat: minishell.h: No such file or directory
 grep: $: No such file or directory
 -> erro no primeiro comando não trava a execução.
 
+==255258== 12 bytes in 1 blocks are definitely lost in loss record 3 of 59
+==255258==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==255258==    by 0x407F1A: init_children_pid (exec_processes.c:18)
+==255258==    by 0x407D94: exec_processes (exec_processes.c:56)
+==255258==    by 0x4073AC: handle_execution (exec.c:13)
+==255258==    by 0x40697A: handle_prompt (prompt.c:59)
+==255258==    by 0x406288: main (main.c:36)
+
+fde-alen:~/Documents/minishell$   
+.git/                  234                    allowed_functions.txt  minishell
+.gitignore             235                    eof                    readline.supp
+.tmp/                  Makefile               errors                 src/
+.vscode/               README.md              includes/              
+123                    all_in_one.c           libs/                  
+fde-alen:~/Documents/minishell$   
+.git/                  234                    allowed_functions.txt  minishell
+.gitignore             235                    eof                    readline.supp
+.tmp/                  Makefile               errors                 src/
+.vscode/               README.md              includes/              
+123                    all_in_one.c           libs/    
+->tab não completa o comando e abre prompt de novo (com o mesmo conteudo)
 
 
 
 
 
-|-------------------------------------------------------------------------|
-fde-alen:~/Documents/Projects/minishell/minishell29Apr$ wc
-123a^M^M^M123^M
 
 |-------------------------------------------------------------------------|
 |~/Documents/Projects/minishell/minishell29Apr (feature/heredoc*) » ./minishell                                       fde-alen@c1r6p2
@@ -21,45 +43,13 @@ fde-alen:~/Documents/Projects/minishell/minishell29Apr$ wc
 |fde-alen:~/Documents/Projects/minishell/minishell29Apr$ waitpid: Interrupted system call
 |-> ctrl+C no meio do comando em bloco printa msg e não devia printar
 
-|-------------------------------------------------------------------------|
-|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ cat
-|
-|^\^\^\^\
-|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ grep something
-|
-|^\^\
-|-> ctrl+\ não dá quit no comando em bloco
 
-|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo """tes""""te"
-|[1]    436794 segmentation fault (core dumped)  ./minishell
-|-------------------------------------------------------------------------------------------------------------------------------------
-|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo """tes"te
-|tes
-|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo """tes""te"
-|tes
-|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo "123""tes""te"
-|123tes
-|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo "123""i""te89""asdasd""""dfsd"
-|[1]    437642 segmentation fault (core dumped)  ./minishell
-|->
 
-fde-alen:~/Documents/Projects/minishell/minishell29Apr$ unset PATH
-fde-alen:~/Documents/Projects/minishell/minishell29Apr$ ls
-minishell: ls: command not found
-fde-alen:~/Documents/Projects/minishell/minishell29Apr$ export PATH=/usr/local/bin:/usr/bin:/bin
-fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo $PATH
-/usr/local/bin:/usr/bin:/bin
-fde-alen:~/Documents/Projects/minishell/minishell29Apr$ ls
-minishell: ls: command not found
 
-cat << eof - lento e com dois > >
-cat << eof - ctrl D
 
- 	 
 
-redir.c
-int	redirect_input(char *input_redirect)
-   
+
+|-------------------------------------------------------------------------|   
 
 
 
@@ -77,268 +67,6 @@ fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo hi | echo 42
 42
 
 
-Test   5: ❌ echo hello""world 
-mini output = (hello world)
-bash output = (helloworld)
-
-
-Test  13: ❌ echo "> >> < * ? [ ] | ; [ ] || && ( ) & # $  <<" 
-mini output = ()
-bash output = (> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfiles pipes README.md redirects syntax tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<)
-mini exit code = 139
-bash exit code = 0
-
-
-Test  14: ❌ echo '> >> < * ? [ ] | ; [ ] || && ( ) & # $  <<' 
-mini output = ()
-bash output = (> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfiles pipes README.md redirects syntax tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<)
-mini exit code = 139
-bash exit code = 0
-
-
-Test  15: ❌ echo "exit_code ->$? user ->$USER home -> $HOME" 
-mini output = ()
-bash output = (exit_code ->0 user ->fde-alen home -> /nfs/homes/fde-alen)
-
-Test  17: ❌ echo "$" 
-mini output = (/bin/zsh)
-bash output = ($)
-
-
-Test  21: ❌ echo $?HELLO 
-mini output = ($?HELLO)
-bash output = (0HELLO)
-
-
-
-
-
-
-
-mini output = (unset: not enough arguments)
-bash output = ()
-mini exit code = 1
-bash exit code = 0
-
-
-Test  36: ❌ unset HOME 
-mini output = (/nfs/homes/fde-alen:~/nfs/homes/fde-alen/Documents/Projects/minishell/minishell29Apr/minishell_tester$ )
-bash output = ()
-mini exit code = /nfs/homes/fde-alen:~/nfs/homes/fde-alen/Documents/Projects/minishell/minishell29Apr/minishell_tester$ exit
-bash exit code = 0
-
-
-Test  49: ❌ exit -"100" 
-mini exit code = 1
-bash exit code = 156
-mini error = ( too many arguments)
-bash error = ()
-
-Test  52: ❌  
-mini exit code =
-bash exit code = 0
-
-
-Test  55: ❌ cat minishell.h | grep ");"$ 
-mini exit code = 2
-bash exit code = 1
-mini error = ( No such file or directory No such file or directory)
-bash error = ( No such file or directory)
-
-
-Test  78: ❌ cat <missing | echo oi 
-mini output = ()
-bash output = (oi)
-mini exit code = 1
-bash exit code = 0
-
-
-Test  80: ❌ echo <123 <456 hi | echo 42 
-mini output = ()
-bash output = (42)
-mini exit code = 1
-bash exit code = 0
-
-
-Test  91: ❌ echo hi >./outfiles/outfile01 | echo bye 
-mini output = ()
-bash output = (bye)
-
-
-Test  92: ❌ echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye 
-mini output = ()
-bash output = (bye)
-
-
-Test  95: ❌ echo hi >./outfiles/outfile01 | echo bye >./outfiles/outfile02 
-Files ./mini_outfiles/outfile02 and ./bash_outfiles/outfile02 differ
-mini outfiles:
-hi
-bash outfiles:
-hi
-bye
-
-
-Test  96: ❌ echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye 
-mini output = ()
-bash output = (bye)
-mini exit code = 1
-bash exit code = 0
-mini error = ( Permission denied Permission denied)
-bash error = ( Permission denied)
-
-
-Test  97: ❌ echo hi >./test_files/invalid_permission | echo bye 
-mini output = ()
-bash output = (bye)
-mini exit code = 1
-bash exit code = 0
-mini error = ( Permission denied Permission denied)
-bash error = ( Permission denied)
-
-
-Test  98: ❌ echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
-mini output = ()
-bash output = (bye)
-mini exit code = 1
-bash exit code = 0
-mini error = ( Permission denied Permission denied)
-bash error = ( Permission denied)
-
-
-Test 100: ❌ echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission 
-Only in ./bash_outfiles: outfile01
-mini outfiles:
-cat: './mini_outfiles/*': No such file or directory
-bash outfiles:
-mini output = (>: command not found)
-bash output = ()
-mini exit code = >: command not found
-bash exit code = 1
-mini error = ()
-bash error = ( Permission denied)
-
-
-Test 103: ❌ cat >./test_files/invalid_permission <"./test_files/infile" 
-mini exit code = xt
-bash exit code = 1
-mini error = ( Permission denied Permission denied)
-bash error = ( Permission denied)
-
-
-Test 119: ❌ ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02 
-mini exit code = o$?exit
-bash exit code = 1
-mini error = ( No such file or directory No such file or directory)
-bash error = ( No such file or directory)
-
-
-Test 121: ❌ echo hi >>./outfiles/outfile01 | echo bye 
-Files ./mini_outfiles/outfile01 and ./bash_outfiles/outfile01 differ
-mini outfiles:
-bye
-hi
-bash outfiles:
-hi
-mini output = ()
-bash output = (bye)
-
-
-Test 122: ❌ echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye 
-Files ./mini_outfiles/outfile02 and ./bash_outfiles/outfile02 differ
-mini outfiles:
-bye
-hi
-bash outfiles:
-hi
-mini output = ()
-bash output = (bye)
-
-
-Test 125: ❌ echo hi >>./outfiles/outfile01 | echo bye >>./outfiles/outfile02 
-Files ./mini_outfiles/outfile01 and ./bash_outfiles/outfile01 differ
-Files ./mini_outfiles/outfile02 and ./bash_outfiles/outfile02 differ
-mini outfiles:
-hi
-bye
-bash outfiles:
-hi
-bye
-
-
-Test 126: ❌ echo hi >>./test_files/invalid_permission | echo bye 
-mini output = ()
-bash output = (bye)
-mini exit code = 1
-bash exit code = 0
-mini error = ( Permission denied Permission denied)
-bash error = ( Permission denied)
-
-
-Test 127: ❌ echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
-mini output = ()
-bash output = (bye)
-mini exit code = 1
-bash exit code = 0
-mini error = ( Permission denied Permission denied)
-bash error = ( Permission denied)
-
-
-Test 133: ❌ $PWD 
-mini output = (/nfs/homes/fde-alen/Documents/Projects/minishell/minishell29Apr/minishell_tester: command not found)
-bash output = ()
-mini exit code = /nfs/homes/fde-alen/Documents/Projects/minishell/minishell29Apr/minishell_tester: command not found
-bash exit code = 126
-mini error = ()
-bash error = ( Is a directory)
-
-
-Test 134: ❌ $EMPTY 
-mini output = ($EMPTY: command not found)
-bash output = ()
-mini exit code = $EMPTY: command not found
-bash exit code = 0
-
-
-Test 135: ❌ $EMPTY echo hi 
-mini output = ($EMPTY: command not found)
-bash output = (hi)
-mini exit code = $EMPTY: command not found
-bash exit code = 0
-
-
-Test 136: ❌ ./test_files/invalid_permission 
-mini exit code = 127
-bash exit code = 126
-mini error = ( No such file or directory)
-bash error = ( Permission denied)
-
-
-Test 139: ❌ "aaa" 
-mini output = (aaa: command not found)
-bash output = ()
-mini exit code = aaa: command not found
-bash exit code = 127
-mini error = ()
-bash error = ( command not found)
-
-
-Test 140: ❌ test_files 
-mini exit code = 1
-bash exit code = 127
-mini error = ( Permission denied)
-bash error = ( command not found)
-
-
-Test 145: ❌ $? 
-mini output = (0: command not found)
-bash output = ()
-mini exit code = 0: command not found
-bash exit code = 127
-mini error = ()
-bash error = ( command not found)
-
-
 
 
 
@@ -372,11 +100,42 @@ bash error = ( command not found)
 
 
 
+FIXED ---------------------------
+fde-alen:~/Documents/Projects/minishell/minishell29Apr$ unset PATH
+fde-alen:~/Documents/Projects/minishell/minishell29Apr$ ls
+minishell: ls: command not found
+fde-alen:~/Documents/Projects/minishell/minishell29Apr$ export PATH=/usr/local/bin:/usr/bin:/bin
+fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo $PATH
+/usr/local/bin:/usr/bin:/bin
+fde-alen:~/Documents/Projects/minishell/minishell29Apr$ ls
+minishell: ls: command not found
 
+|-------------------------------------------------------------------------|
+|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ cat
+|
+|^\^\^\^\
+|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ grep something
+|
+|^\^\
+|-> ctrl+\ não dá quit no comando em bloco
 
 
+|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo """tes""""te"
+|[1]    436794 segmentation fault (core dumped)  ./minishell
+|-------------------------------------------------------------------------------------------------------------------------------------
+|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo """tes"te
+|tes
+|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo """tes""te"
+|tes
+|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo "123""tes""te"
+|123tes
+|fde-alen:~/Documents/Projects/minishell/minishell29Apr$ echo "123""i""te89""asdasd""""dfsd"
+|[1]    437642 segmentation fault (core dumped)  ./minishell
+|->
 
-FIXED ---------------------------
+|-------------------------------------------------------------------------|
+fde-alen:~/Documents/Projects/minishell/minishell29Apr$ wc
+123a^M^M^M123^M
 
 |-------------------------------------------------------------------------|
 fde-alen:~/Documents/Projects/minishell/minishell29Apr/minishell_tester$ echo "exit_code ->$? user ->$USER home -> $HOME"
@@ -524,6 +283,7 @@ fde-alen:~/Documents/minishell$ echo $?
 0
 
 
+
 fde-alen:~/Documents/minishell$ > 123 > 234 > 235
 minishell: >: command not found
 
@@ -1019,4 +779,491 @@ fde-alen:~/Documents/minishell$ << eof << eof
 ==42830==    by 0x4033F0: tokenize (token.c:112)
 ==42830==    by 0x40694A: handle_prompt (prompt.c:52)
 ==42830==    by 0x4062A8: main (main.c:36)
-==42830== 
\ No newline at end of file
+==42830== 
+
+
+
+
+
+~/Documents/minishell (agoravai*) » make valgrind                                           fde-alen@c1r7p1
+Running the program with valgrind...
+valgrind --leak-check=full --show-leak-kinds=all --trace-children=yes --track-origins=yes --track-fds=yes --suppressions=readline.supp ./minishell
+==59388== Memcheck, a memory error detector
+==59388== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
+==59388== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
+==59388== Command: ./minishell
+==59388== 
+fde-alen:~/Documents/minishell$ cat minishell.h | grep ");"$
+==59434== Memcheck, a memory error detector
+==59434== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
+==59434== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
+==59434== Command: /usr/bin/grep ); $
+==59434== 
+==59433== Memcheck, a memory error detector
+==59433== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
+==59433== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
+==59433== Command: /usr/bin/cat minishell.h
+==59433== 
+/usr/bin/cat: minishell.h: No such file or directory
+==59433== 
+==59433== FILE DESCRIPTORS: 5 open at exit.
+==59433== Open file descriptor 103: /usr/share/code/v8_context_snapshot.bin
+==59433==    <inherited from parent>
+==59433== 
+==59433== Open file descriptor 39: /usr/share/code/resources/app/node_modules.asar
+==59433==    <inherited from parent>
+==59433== 
+==59433== Open file descriptor 38: /dev/ptmx
+==59433==    <inherited from parent>
+==59433== 
+==59433== Open file descriptor 37: /nfs/homes/fde-alen/.config/Code/logs/20240501T110246/ptyhost.log
+==59433==    <inherited from parent>
+==59433== 
+==59433== Open file descriptor 0: /dev/pts/1
+==59433==    <inherited from parent>
+==59433== 
+==59433== 
+==59433== HEAP SUMMARY:
+==59433==     in use at exit: 0 bytes in 0 blocks
+==59433==   total heap usage: 41 allocs, 41 frees, 13,599 bytes allocated
+==59433== 
+==59433== All heap blocks were freed -- no leaks are possible
+==59433== 
+==59433== For lists of detected and suppressed errors, rerun with: -s
+==59433== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
+/usr/bin/grep: $: No such file or directory
+==59434== 
+==59434== FILE DESCRIPTORS: 5 open at exit.
+==59434== Open file descriptor 103: /usr/share/code/v8_context_snapshot.bin
+==59434==    <inherited from parent>
+==59434== 
+==59434== Open file descriptor 39: /usr/share/code/resources/app/node_modules.asar
+==59434==    <inherited from parent>
+==59434== 
+==59434== Open file descriptor 38: /dev/ptmx
+==59434==    <inherited from parent>
+==59434== 
+==59434== Open file descriptor 37: /nfs/homes/fde-alen/.config/Code/logs/20240501T110246/ptyhost.log
+==59434==    <inherited from parent>
+==59434== 
+==59434== Open file descriptor 0:
+==59434==    <inherited from parent>
+==59434== 
+==59434== 
+==59434== HEAP SUMMARY:
+==59434==     in use at exit: 113,819 bytes in 44 blocks
+==59434==   total heap usage: 147 allocs, 103 frees, 140,070 bytes allocated
+==59434== 
+==59434== 3 bytes in 1 blocks are possibly lost in loss record 1 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129F68: ??? (in /usr/bin/grep)
+==59434==    by 0x10DDFE: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 4 bytes in 1 blocks are still reachable in loss record 2 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49CFC4F: re_node_set_init_copy (regex_internal.c:1033)
+==59434==    by 0x49CFC4F: create_cd_newstate (regex_internal.c:1681)
+==59434==    by 0x49CFC4F: re_acquire_state_context (regex_internal.c:1553)
+==59434==    by 0x49DA5C4: create_initial_state (regcomp.c:1050)
+==59434==    by 0x49DA5C4: re_compile_internal (regcomp.c:806)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10EA5F: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 4 bytes in 1 blocks are still reachable in loss record 3 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49C8952: re_node_set_alloc (regex_internal.c:972)
+==59434==    by 0x49C8952: register_state (regex_internal.c:1574)
+==59434==    by 0x49CFDF5: create_cd_newstate (regex_internal.c:1737)
+==59434==    by 0x49CFDF5: re_acquire_state_context (regex_internal.c:1553)
+==59434==    by 0x49DA5C4: create_initial_state (regcomp.c:1050)
+==59434==    by 0x49DA5C4: re_compile_internal (regcomp.c:806)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10EA5F: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 4 bytes in 1 blocks are indirectly lost in loss record 4 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49CFC4F: re_node_set_init_copy (regex_internal.c:1033)
+==59434==    by 0x49CFC4F: create_cd_newstate (regex_internal.c:1681)
+==59434==    by 0x49CFC4F: re_acquire_state_context (regex_internal.c:1553)
+==59434==    by 0x49DA5C4: create_initial_state (regcomp.c:1050)
+==59434==    by 0x49DA5C4: re_compile_internal (regcomp.c:806)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10E877: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 4 bytes in 1 blocks are indirectly lost in loss record 5 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49C8952: re_node_set_alloc (regex_internal.c:972)
+==59434==    by 0x49C8952: register_state (regex_internal.c:1574)
+==59434==    by 0x49CFDF5: create_cd_newstate (regex_internal.c:1737)
+==59434==    by 0x49CFDF5: re_acquire_state_context (regex_internal.c:1553)
+==59434==    by 0x49DA5C4: create_initial_state (regcomp.c:1050)
+==59434==    by 0x49DA5C4: re_compile_internal (regcomp.c:806)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10E877: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 12 bytes in 1 blocks are still reachable in loss record 6 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49D99BA: analyze (regcomp.c:1169)
+==59434==    by 0x49D99BA: re_compile_internal (regcomp.c:795)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10EA5F: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 12 bytes in 1 blocks are still reachable in loss record 7 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E2C: ??? (in /usr/bin/grep)
+==59434==    by 0x11D5FC: ??? (in /usr/bin/grep)
+==59434==    by 0x120CFC: ??? (in /usr/bin/grep)
+==59434==    by 0x10EB18: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 12 bytes in 3 blocks are still reachable in loss record 8 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49CDAE9: re_node_set_alloc (regex_internal.c:972)
+==59434==    by 0x49CDAE9: calc_eclosure_iter (regcomp.c:1700)
+==59434==    by 0x49DA232: calc_eclosure (regcomp.c:1677)
+==59434==    by 0x49DA232: analyze (regcomp.c:1204)
+==59434==    by 0x49DA232: re_compile_internal (regcomp.c:795)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10EA5F: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 12 bytes in 1 blocks are indirectly lost in loss record 9 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49D99BA: analyze (regcomp.c:1169)
+==59434==    by 0x49D99BA: re_compile_internal (regcomp.c:795)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10E877: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 12 bytes in 3 blocks are indirectly lost in loss record 10 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49CDAE9: re_node_set_alloc (regex_internal.c:972)
+==59434==    by 0x49CDAE9: calc_eclosure_iter (regcomp.c:1700)
+==59434==    by 0x49DA232: calc_eclosure (regcomp.c:1677)
+==59434==    by 0x49DA232: analyze (regcomp.c:1204)
+==59434==    by 0x49DA232: re_compile_internal (regcomp.c:795)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10E877: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 16 bytes in 1 blocks are still reachable in loss record 11 of 38
+==59434==    at 0x483B723: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x483E017: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49C8A43: register_state (regex_internal.c:1589)
+==59434==    by 0x49CFDF5: create_cd_newstate (regex_internal.c:1737)
+==59434==    by 0x49CFDF5: re_acquire_state_context (regex_internal.c:1553)
+==59434==    by 0x49DA5C4: create_initial_state (regcomp.c:1050)
+==59434==    by 0x49DA5C4: re_compile_internal (regcomp.c:806)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10EA5F: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 16 bytes in 1 blocks are still reachable in loss record 12 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E2C: ??? (in /usr/bin/grep)
+==59434==    by 0x11A5DB: ??? (in /usr/bin/grep)
+==59434==    by 0x11D715: ??? (in /usr/bin/grep)
+==59434==    by 0x120CFC: ??? (in /usr/bin/grep)
+==59434==    by 0x10EB18: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 16 bytes in 1 blocks are indirectly lost in loss record 13 of 38
+==59434==    at 0x483B723: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x483E017: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49C8A43: register_state (regex_internal.c:1589)
+==59434==    by 0x49CFDF5: create_cd_newstate (regex_internal.c:1737)
+==59434==    by 0x49CFDF5: re_acquire_state_context (regex_internal.c:1553)
+==59434==    by 0x49DA5C4: create_initial_state (regcomp.c:1050)
+==59434==    by 0x49DA5C4: re_compile_internal (regcomp.c:806)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10E877: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 28 bytes in 1 blocks are still reachable in loss record 14 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E2C: ??? (in /usr/bin/grep)
+==59434==    by 0x11D0E5: ??? (in /usr/bin/grep)
+==59434==    by 0x120CFC: ??? (in /usr/bin/grep)
+==59434==    by 0x10EB18: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 48 bytes in 1 blocks are still reachable in loss record 15 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49D94C1: init_dfa (regcomp.c:859)
+==59434==    by 0x49D94C1: re_compile_internal (regcomp.c:758)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10EA5F: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 48 bytes in 1 blocks are still reachable in loss record 16 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49D99DB: analyze (regcomp.c:1171)
+==59434==    by 0x49D99DB: re_compile_internal (regcomp.c:795)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10EA5F: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 48 bytes in 1 blocks are still reachable in loss record 17 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49D99EB: analyze (regcomp.c:1172)
+==59434==    by 0x49D99EB: re_compile_internal (regcomp.c:795)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10EA5F: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 48 bytes in 1 blocks are indirectly lost in loss record 18 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49D94C1: init_dfa (regcomp.c:859)
+==59434==    by 0x49D94C1: re_compile_internal (regcomp.c:758)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10E877: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 48 bytes in 1 blocks are indirectly lost in loss record 19 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49D99DB: analyze (regcomp.c:1171)
+==59434==    by 0x49D99DB: re_compile_internal (regcomp.c:795)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10E877: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 48 bytes in 1 blocks are indirectly lost in loss record 20 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49D99EB: analyze (regcomp.c:1172)
+==59434==    by 0x49D99EB: re_compile_internal (regcomp.c:795)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10E877: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 64 bytes in 1 blocks are still reachable in loss record 21 of 38
+==59434==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49D94F8: init_dfa (regcomp.c:866)
+==59434==    by 0x49D94F8: re_compile_internal (regcomp.c:758)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10EA5F: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 64 bytes in 1 blocks are indirectly lost in loss record 22 of 38
+==59434==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49D94F8: init_dfa (regcomp.c:866)
+==59434==    by 0x49D94F8: re_compile_internal (regcomp.c:758)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10E877: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 72 bytes in 1 blocks are still reachable in loss record 23 of 38
+==59434==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129F32: ??? (in /usr/bin/grep)
+==59434==    by 0x10E668: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 80 bytes in 1 blocks are still reachable in loss record 24 of 38
+==59434==    at 0x483B723: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x483E017: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E59: ??? (in /usr/bin/grep)
+==59434==    by 0x11A6B4: ??? (in /usr/bin/grep)
+==59434==    by 0x11D715: ??? (in /usr/bin/grep)
+==59434==    by 0x120CFC: ??? (in /usr/bin/grep)
+==59434==    by 0x10EB18: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 88 bytes in 1 blocks are still reachable in loss record 25 of 38
+==59434==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49CFC13: create_cd_newstate (regex_internal.c:1678)
+==59434==    by 0x49CFC13: re_acquire_state_context (regex_internal.c:1553)
+==59434==    by 0x49DA5C4: create_initial_state (regcomp.c:1050)
+==59434==    by 0x49DA5C4: re_compile_internal (regcomp.c:806)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10EA5F: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 88 bytes in 1 blocks are indirectly lost in loss record 26 of 38
+==59434==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49CFC13: create_cd_newstate (regex_internal.c:1678)
+==59434==    by 0x49CFC13: re_acquire_state_context (regex_internal.c:1553)
+==59434==    by 0x49DA5C4: create_initial_state (regcomp.c:1050)
+==59434==    by 0x49DA5C4: re_compile_internal (regcomp.c:806)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10E877: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 128 bytes in 1 blocks are still reachable in loss record 27 of 38
+==59434==    at 0x483B723: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x483E017: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E59: ??? (in /usr/bin/grep)
+==59434==    by 0x10F719: ??? (in /usr/bin/grep)
+==59434==    by 0x10DE17: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 128 bytes in 1 blocks are still reachable in loss record 28 of 38
+==59434==    at 0x483DFAF: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E59: ??? (in /usr/bin/grep)
+==59434==    by 0x10E809: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 128 bytes in 1 blocks are still reachable in loss record 29 of 38
+==59434==    at 0x483B723: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x483E017: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E59: ??? (in /usr/bin/grep)
+==59434==    by 0x11C518: ??? (in /usr/bin/grep)
+==59434==    by 0x11C8A4: ??? (in /usr/bin/grep)
+==59434==    by 0x1206C4: ??? (in /usr/bin/grep)
+==59434==    by 0x10EAB0: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 168 bytes in 1 blocks are still reachable in loss record 30 of 38
+==59434==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129F32: ??? (in /usr/bin/grep)
+==59434==    by 0x11CCBE: ??? (in /usr/bin/grep)
+==59434==    by 0x120CFC: ??? (in /usr/bin/grep)
+==59434==    by 0x10EB18: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 224 bytes in 1 blocks are still reachable in loss record 31 of 38
+==59434==    at 0x483B723: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x483E017: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49DA934: re_compile_internal (regcomp.c:750)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10EA5F: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 256 bytes in 1 blocks are still reachable in loss record 32 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E2C: ??? (in /usr/bin/grep)
+==59434==    by 0x10ED01: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 384 bytes in 3 blocks are still reachable in loss record 33 of 38
+==59434==    at 0x483B723: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x483E017: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E59: ??? (in /usr/bin/grep)
+==59434==    by 0x11D996: ??? (in /usr/bin/grep)
+==59434==    by 0x120CFC: ??? (in /usr/bin/grep)
+==59434==    by 0x10EB18: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 568 (224 direct, 344 indirect) bytes in 1 blocks are definitely lost in loss record 34 of 38
+==59434==    at 0x483B723: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x483E017: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x49DA934: re_compile_internal (regcomp.c:750)
+==59434==    by 0x49DAC4E: re_compile_pattern (regcomp.c:230)
+==59434==    by 0x10E877: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 2,336 bytes in 1 blocks are still reachable in loss record 35 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E2C: ??? (in /usr/bin/grep)
+==59434==    by 0x10E670: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 2,472 bytes in 1 blocks are still reachable in loss record 36 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E2C: ??? (in /usr/bin/grep)
+==59434==    by 0x1141B7: ??? (in /usr/bin/grep)
+==59434==    by 0x117BE3: ??? (in /usr/bin/grep)
+==59434==    by 0x10EACD: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 4,064 bytes in 1 blocks are still reachable in loss record 37 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E2C: ??? (in /usr/bin/grep)
+==59434==    by 0x12D464: _obstack_begin (in /usr/bin/grep)
+==59434==    by 0x1141D4: ??? (in /usr/bin/grep)
+==59434==    by 0x11755C: ??? (in /usr/bin/grep)
+==59434==    by 0x10EAFD: ??? (in /usr/bin/grep)
+==59434==    by 0x10D877: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== 102,408 bytes in 1 blocks are still reachable in loss record 38 of 38
+==59434==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59434==    by 0x129E2C: ??? (in /usr/bin/grep)
+==59434==    by 0x10D955: ??? (in /usr/bin/grep)
+==59434==    by 0x4900082: (below main) (libc-start.c:308)
+==59434== 
+==59434== LEAK SUMMARY:
+==59434==    definitely lost: 224 bytes in 1 blocks
+==59434==    indirectly lost: 344 bytes in 12 blocks
+==59434==      possibly lost: 3 bytes in 1 blocks
+==59434==    still reachable: 113,248 bytes in 30 blocks
+==59434==         suppressed: 0 bytes in 0 blocks
+==59434== 
+==59434== For lists of detected and suppressed errors, rerun with: -s
+==59434== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
+fde-alen:~/Documents/minishell$ exit
+exit
+==59388== 
+==59388== FILE DESCRIPTORS: 4 open at exit.
+==59388== Open file descriptor 103: /usr/share/code/v8_context_snapshot.bin
+==59388==    <inherited from parent>
+==59388== 
+==59388== Open file descriptor 39: /usr/share/code/resources/app/node_modules.asar
+==59388==    <inherited from parent>
+==59388== 
+==59388== Open file descriptor 38: /dev/ptmx
+==59388==    <inherited from parent>
+==59388== 
+==59388== Open file descriptor 37: /nfs/homes/fde-alen/.config/Code/logs/20240501T110246/ptyhost.log
+==59388==    <inherited from parent>
+==59388== 
+==59388== 
+==59388== HEAP SUMMARY:
+==59388==     in use at exit: 204,686 bytes in 216 blocks
+==59388==   total heap usage: 750 allocs, 534 frees, 247,789 bytes allocated
+==59388== 
+==59388== 12 bytes in 1 blocks are definitely lost in loss record 3 of 59
+==59388==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
+==59388==    by 0x407F3A: init_children_pid (exec_processes.c:18)
+==59388==    by 0x407DB4: exec_processes (exec_processes.c:56)
+==59388==    by 0x4073CC: handle_execution (exec.c:13)
+==59388==    by 0x40699A: handle_prompt (prompt.c:59)
+==59388==    by 0x4062A8: main (main.c:36)
+==59388== 
+==59388== LEAK SUMMARY:
+==59388==    definitely lost: 12 bytes in 1 blocks
+==59388==    indirectly lost: 0 bytes in 0 blocks
+==59388==      possibly lost: 0 bytes in 0 blocks
+==59388==    still reachable: 0 bytes in 0 blocks
+==59388==         suppressed: 204,674 bytes in 215 blocks
+==59388== 
+==59388== For lists of detected and suppressed errors, rerun with: -s
+==59388== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
\ No newline at end of file
diff --git a/src/execution/exec_processes.c b/src/execution/exec_processes.c
index 3bf47a8..2ed3d4b 100644
--- a/src/execution/exec_processes.c
+++ b/src/execution/exec_processes.c
@@ -71,5 +71,7 @@ int	exec_processes(t_global *data)
 		i++;
 	}
 	restore_fds(data->original_fds);
-	return (wait_for_children(children_pid));
+	i = wait_for_children(children_pid);
+	free(children_pid);
+	return (i);
 }
