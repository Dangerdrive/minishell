readline: Lê uma linha da entrada padrão, permitindo a edição interativa.

rl_clear_history: Limpa o histórico de comandos do readline.

rl_on_new_line: Notifica readline que a próxima entrada será em uma nova linha.

rl_replace_line: Substitui a linha atual do readline.

rl_redisplay: Atualiza a exibição do readline.

add_history: Adiciona uma linha ao histórico do readline.

printf: Imprime uma string formatada na saída padrão.

malloc: Aloca memória dinamicamente.

free: Libera a memória alocada dinamicamente.

write: Escreve dados em um descritor de arquivo.

access: Verifica a existência de um arquivo ou permissões de acesso.

open: Abre um arquivo ou cria um novo.

read: Lê dados de um descritor de arquivo.

close: Fecha um descritor de arquivo.

fork: Cria um novo processo duplicando o processo pai.

wait, waitpid, wait3, wait4: Aguarda o término de um processo filho.
	Em geral, waitpid é a função mais flexível e comumente usada, pois permite maior controle
	sobre quais processos filhos esperar e como lidar com o término deles. As funções wait3 e wait4
	são menos comuns e podem ser obsoletas ou não disponíveis em todos os sistemas.

signal: Configura um manipulador de sinal.

sigaction: Configura a ação a ser tomada para um sinal específico.

sigemptyset, sigaddset: Manipula conjuntos de sinais.

kill: Envia um sinal para um processo.

exit: Termina um processo.

getcwd: Obtém o diretório de trabalho atual.

chdir: Muda o diretório de trabalho.

stat, lstat, fstat: Obtém informações sobre um arquivo.
	Em resumo, stat e lstat são usadas para obter informações sobre um arquivo ou link simbólico
	especificado por caminho, enquanto fstat é usada para obter informações sobre um arquivo já aberto,
	referenciado por um descritor de arquivo.

unlink: Remove um arquivo.

execve: Executa um programa.

dup, dup2: Duplica descritores de arquivo.

pipe: Cria um pipe para comunicação entre processos.

opendir, readdir, closedir: Manipula diretórios.

strerror: Retorna uma string descrevendo um código de erro.

perror: Imprime uma mensagem de erro.

isatty: Verifica se um descritor de arquivo se refere a um terminal.

ttyname: Retorna o nome do terminal associado a um descritor de arquivo.

ttyslot: Retorna o índice do slot do terminal.

ioctl: Controla dispositivos de E/S.

getenv: Obtém o valor de uma variável de ambiente.

tcsetattr, tcgetattr: Configura ou obtém atributos do terminal.
	Em resumo, tcsetattr é usado para configurar os atributos do terminal, enquanto tcgetattr é
	usado para obter os atributos atuais do terminal.
	Essas funções são frequentemente usadas em conjunto para garantir que um programa possa modificar
	e restaurar as configurações do terminal conforme necessário.

tgetent, tgetflag, tgetnum, tgetstr, tgoto, tputs: Funções para manipulação de capacidades do terminal no sistema terminfo.

	tgetent: Obtém as informações sobre o terminal a partir do banco de dados terminfo, inicializando a estrutura termcap.

	tgetflag: Obtém o valor de uma capacidade de terminal que é uma bandeira booleana (ativada/desativada).

	tgetnum: Obtém o valor de uma capacidade de terminal que é um número inteiro.

	tgetstr: Obtém o valor de uma capacidade de terminal que é uma string.

	tgoto: Constrói uma string que representa a sequência de controle de cursor apropriada para um movimento específico no terminal.

	tputs: Envia uma string de controle para o terminal, geralmente usada para realizar ações específicas,
	como limpar a tela ou posicionar o cursor.
